name: GitHub CI

on:
  push:
    branches:
      - develop
      - '**'
  pull_request:
    branches:
      - develop
      - '**'

jobs:
  build:

    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macOS-latest ]
        #java: [ 8, 11, 17-ea ]
        java: [ 8 ]
      fail-fast: false

    runs-on: ${{ matrix.os }}

    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: ${{ matrix.java }}
          cache: 'maven'

      - name: Prepare release
        if: ${{ runner.os == 'Linux' && github.event_name == 'push' && github.repository == 'm2e-code-quality/m2e-code-quality' && startsWith(github.ref, 'refs/tags/') }}
        shell: bash
        run: tools/prepare_release.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build with Maven
        uses: GabrielBB/xvfb-action@v1
        with:
          run: bash tools/build.sh
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}

      - name: Publish update site
        if: ${{ runner.os == 'Linux' && github.event_name == 'push' && github.repository == 'm2e-code-quality/m2e-code-quality' }}
        shell: bash
        run: tools/publish-update-site.sh
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLISH_SITE_TOKEN }}

      - name: Publish release
        if: ${{ runner.os == 'Linux' && github.event_name == 'push' && github.repository == 'm2e-code-quality/m2e-code-quality' && startsWith(github.ref, 'refs/tags/') }}
        shell: bash
        run: tools/release.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
